from pwn import remote, xor

# Connect to the server
r = remote('83.136.253.201', 41131)

# Use the same nonce for both requests
nonce = b'12345678'  # 8 bytes (arbitrary)

# Step 1: Send long username to recover the keystream
r.recvuntil(b"Enter your secure access key: ")
r.sendline(nonce)
r.recvuntil(b"Enter your Agent Codename: ")
long_username = b'a' * 80
r.sendline(long_username)

r.recvuntil(b"Encrypted transmission: ")
ciphertext_hex = r.recvline().strip().decode()
ciphertext = bytes.fromhex(ciphertext_hex)

# Build the known plaintext
known_plaintext = b"Agent " + long_username + b", your clearance for Operation Blackout is: "
keystream = xor(ciphertext[:len(known_plaintext)], known_plaintext)

# Step 2: Send short username to decrypt the flag
r.recvuntil(b"Enter your secure access key: ")
r.sendline(nonce)
r.recvuntil(b"Enter your Agent Codename: ")
short_username = b'a'
r.sendline(short_username)

r.recvuntil(b"Encrypted transmission: ")
ciphertext_hex2 = r.recvline().strip().decode()
ciphertext2 = bytes.fromhex(ciphertext_hex2)

# Decrypt using recovered keystream
decrypted = xor(ciphertext2[:len(keystream)], keystream)
print("[+] Decrypted message:")
print(decrypted.decode())

r.close()
