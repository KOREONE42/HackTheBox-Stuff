#!/usr/bin/env python3
from pwn import remote, log
import hashlib

HOST = "94.237.121.185"
PORT = 37793

def main():
    conn = remote(HOST, PORT)

    fixed_msg = b"Improving on the security of SHA is easy"

    def buy_hint(msg: bytes) -> str:
        conn.sendlineafter(b"Option: ", b"2")
        conn.sendlineafter(b"hex :: ", msg.hex().encode())
        line = conn.recvline().strip().decode()
        return line.split()[-1]

    # 1) Recover k' via hint collisions
    seen = {}
    for _ in range(20):
        h = buy_hint(fixed_msg)
        if h in seen:
            true_bytes = bytes.fromhex(h)
            k_prime = true_bytes[32:]
            log.success(f"Recovered k': {k_prime.hex()}")
            break
        seen[h] = True
    else:
        log.critical("Failed to recover k'")
        return

    # 2) Play optimally until â‰¥500 coins
    for _ in range(100):
        conn.sendlineafter(b"Option: ", b"3")
        blob = conn.recvuntil(b":: ")
        lines = blob.splitlines()

        # === FIXED HERE ===
        m_hex = lines[0].split()[-1].decode()
        m     = bytes.fromhex(m_hex)
        Y_hex = lines[1].split()[-1].decode()
        Y     = bytes.fromhex(Y_hex)
        # ==================

        local_h1 = hashlib.sha256(k_prime + m).digest()
        guess    = b"0" if local_h1 == Y[:32] else b"1"

        conn.sendline(guess)
        conn.recvline()  # consume the success/fail line

    # 3) Buy and print the flag
    conn.sendlineafter(b"Option: ", b"1")
    print(conn.recvline().decode().strip())

if __name__ == "__main__":
    main()
