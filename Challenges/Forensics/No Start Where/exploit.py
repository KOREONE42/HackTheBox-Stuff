def unhide(key: bytearray, data: bytearray) -> str:
    """
    Decrypts an XOR-obfuscated byte sequence using the provided key.

    The decryption applies a repeating XOR between each byte in `data` and the
    corresponding byte in `key`. The key is repeated cyclically if `data` is longer.

    Args:
        key (bytearray): The XOR key used for decryption.
        data (bytearray): The encrypted byte sequence.

    Returns:
        str: The decoded string after XOR decryption.
    """
    # XOR each byte of data with the key (cyclically) and build a bytearray
    decrypted = bytearray(b ^ key[i % len(key)] for i, b in enumerate(data))
    # Decode the result into a UTF-8 string
    return decrypted.decode(errors="replace")


# XOR key used for decryption
key = bytearray([
    156, 164, 143, 100, 219, 10, 34, 92,
    113, 212, 132, 229, 159, 196, 170, 56
])

# Encrypted byte sequence (target domain or URL)
encrypted_bytes = bytearray([
    212, 240, 205, 31, 239, 85, 80, 104,
    31, 167, 180, 136, 232, 240, 216, 11,
    195, 144, 227, 19, 239, 115, 81, 3,
    6, 166, 183, 209, 244, 241, 245, 80,
    168, 210, 191, 7, 166
])

# Run decryption
result = unhide(key, encrypted_bytes)
print(result)
