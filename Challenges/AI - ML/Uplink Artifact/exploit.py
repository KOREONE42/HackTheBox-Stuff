import pandas as pd
import numpy as np
import cv2
from pyzbar.pyzbar import decode as zbar_decode
from PIL import Image

# Load dataset and filter QR cluster
df = pd.read_csv('uplink_spatial_auth.csv')
qr_points = df[df['label'] == 1]

# Map the QR points to a grid
x_vals = np.sort(qr_points['x'].unique())
y_vals = np.sort(qr_points['y'].unique())
nx, ny = len(x_vals), len(y_vals)
x_to_i = {x: i for i, x in enumerate(x_vals)}
y_to_j = {y: j for j, y in enumerate(y_vals)}

# Create a binary matrix for the QR code
mat = np.ones((ny, nx), dtype=np.uint8) * 255
for _, row in qr_points.iterrows():
    mat[ny - 1 - y_to_j[row['y']], x_to_i[row['x']]] = 0  # invert y-axis

# Scale up the matrix for visibility and decoding
scale = 20
img_scaled = cv2.resize(mat, (nx * scale, ny * scale), interpolation=cv2.INTER_NEAREST)

# Decoding with pyzbar
try:    
    decoded_objs = zbar_decode(Image.fromarray(img_scaled))
    for obj in decoded_objs:
        print("Decoded HTB flag:", obj.data.decode())
except Exception as e:
    print("pyzbar decode error:", e)