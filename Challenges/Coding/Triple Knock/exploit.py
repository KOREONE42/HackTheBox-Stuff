import sys

def to_minutes(dd_mm, hh_mm):
    # dd_mm: "DD/MM", hh_mm: "HH:MM"
    day, month = map(int, dd_mm.split('/'))
    hh, mm = map(int, hh_mm.split(':'))
    # months are 1-based; each has 30 days
    total_days = (month - 1) * 30 + day
    return total_days * 1440 + hh * 60 + mm

def main():
    data = sys.stdin.read().strip().split()
    S, N = map(int, data[:2])
    idx = 2
    failures = {}
    
    for _ in range(S):
        user = data[idx]; idx += 1
        dd_mm = data[idx]; idx += 1
        hh_mm = data[idx]; idx += 1
        status = data[idx]; idx += 1
        
        if status == "[failure]":
            t = to_minutes(dd_mm, hh_mm)
            failures.setdefault(user, []).append(t)
    
    targeted = []
    for user, times in failures.items():
        times.sort()
        i = 0
        # sliding window
        for j in range(len(times)):
            # move left pointer up to keep window â‰¤ 10 minutes
            while times[j] - times[i] > 10:
                i += 1
            if j - i + 1 >= 3:
                targeted.append(user)
                break
    
    # lexicographical sort and print
    targeted.sort()
    print(" ".join(targeted))

if __name__ == "__main__":
    main()
